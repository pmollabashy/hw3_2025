/*Your Code Here*/

/*Write selector/rule property to add your border when
links in the navigation are in the hover or focus state.*/

nav a:hover, nav a:focus {
    border: 2px dotted purple;
}

/*Write selector/rule property to position the default position for the skip class element*/

.skip a {
  position: absolute;
  top: -65px;
  left: 0px;
}

/*Write selector/rule property to position the skip class element when it is in focus*/

.skip a:focus {
  top: 25px;
  border: 5px dashed green;
}

/*Write selector/rule property to style all elements when in focus*/

:focus {
     border: dashed green 2px
}

/*Write selector/rule property to style the container */

.container {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 13px;
}

.container img {
  width: 100%;
  height: auto;
}

/*Write selector/rule property to add the background image to the first div in the grid and place it in the grid. */

.container > :first-child {
    grid-column: 1 / -1;
    background-image: url('../images/header.jpg');
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

/* Steps 6 and 7: Write the selector/rule properties to  place the next five elements in the next
 five rows in the grid. */

      /*This will be a lot of rules.... but be strategic and combine selectors*/

.accounts,
.onlinebanking,
.security,
.loans,
.contact {
  grid-column: 2 / span 3;
  align-items: center;
  justify-content: center;
}

.accounts      { grid-row: 2; }
.onlinebanking { grid-row: 3; }
.security      { grid-row: 4; }
.loans         { grid-row: 5; }
.contact       { grid-row: 6; }

.accounts-image,
.onlinebanking-image,
.security-image,
.loans-image,
.contact-image {
  grid-column: 1 / -1;
  max-height: 675px;
}

.accounts-image      { grid-row: 2; }
.onlinebanking-image { grid-row: 3; }
.security-image      { grid-row: 4; }
.loans-image         { grid-row: 5; }
.contact-image       { grid-row: 6; }

/* Added this part below because I was having an issue with the image not accommodating to the size of the text block in mobile view. Not sure if this is exactly how it was supposed to be done, but it worked in making my site match the screenshots.
(See Piazza question #43) */
.loans-image img {
  width: 100%;
  height: 100%;
}

 /* Step 8: Write the selector/rule property to style the .text-block class. */

.text-block {
  text-align: center;
  justify-self: center;
  align-self: center;
}

.text-block ul {
  text-align: left;
}

/* Add your media query here */

@media screen and (min-width: 825px) {

  /* Step 10: Write the selector/rule property to style the nav element */

  nav {
    justify-content: end;
    padding: 35px 0;
  }

  /* Step 11: Write the selector/rule property to update the .container class */

  .container {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
  }

  /* Steps 12 - 15: Update the grid-column property of the grid's children (where-needed)*/

  .accounts,
  .security,
  .contact {
    grid-column: 4 / span 3;
  }

  .onlinebanking,
  .loans {
    grid-column: 2 / span 3;
  }

  .accounts-image,
  .security-image,
  .contact-image {
    grid-column: 1 / span 5;
  }

  .onlinebanking-image,
  .loans-image {
    grid-column: 3 / span 5;
  }

 /* Step 16:Write the selector/rule property to update the .text-block class */

  .text-block {
    max-height: 235px;
    overflow: auto;
  }

}